/**
 * billid PoC App - common angular services for mobile and web
 * @version v1.0.0-dev-Sun Jun 14 2015 13:14:52
 * @link https://github.com/billidin/poc-services
 */
!function(a){"use strict";a.module("billidpoc",["billidpoc.services","billidpoc.auth-services","angular-storage"]),a.module("billidpoc.services",[]).constant("DEFAULT_ENVIRONMENTS",{DEV:"DEV",PRODUCTION:"PRODUCTION",STAGING:"STAGING"}).constant("APP_CONSTANTS",{MAX_LIMIT:-1,JWT_TOKEN_KEY:"billidpoc.app.auth.token",APPLICATION_CONFIGURATION_KEY:"billidpoc.app.config",USER_PROFILE_KEY:"billidpoc.app.profile",STRATAGIES:{BEARER:"Bearer"},TITLES:{MR:"Mr",MS:"Ms",MRS:"Mrs",MISS:"Miss",DR:"Dr",PROF:"Prof",REV:"Rev",SIR:"Sir",OTHER:"Other"},SORTING_ORDER:{ASCENDING:"ASC",DESCENDING:"DESC"},SERVICES:{Receipts:"Receipts",Profiles:"Profiles",Auth:"Auth",Organizations:"Organizations"}}).factory("RequestHelper",["$q","$http","APP_CONSTANTS","ApplicationStorage","Logger",function(a,b,c,d,e){var f={},g="GET";return f.createRequest=function(a){var b={Authorization:c.STRATAGIES.BEARER+" "+d.getJwtToken()};if(!a)throw new Error(" empty options found for createRequest");if(!a.url)throw new Error(" no url found for createRequest");var e=a.method||g,f=a.headers||b,h={method:e,url:a.url,headers:f};return a.data&&(h.data=a.data),h},f.execute=function(c){var d=a.defer(),g=f.createRequest(c);return b(g).then(function(a){d.resolve(a.data)},function(a){e.error(a,"error executing "+JSON.stringify(g)),d.reject(a)}),d.promise},f}]).factory("ServicesResolver",["ENVIRONMENT","DEFAULT_ENVIRONMENTS","$injector","APP_CONSTANTS",function(a,b,c,d){var e={};return e.getService=function(e){if(d.SERVICES[e]){var f=e+"Mock",g=e+"Production";if(a===b.DEV)return c.get(f);if(a===b.STAGING||b.PRODUCTION)return c.get(g);throw new Error(a+" environment is not supported")}throw new Error("Invalid service name "+e)},e}]).factory("ApplicationStorage",["store","APP_CONSTANTS",function(a,b){var c={};return c.token="",c.getJwtToken=function(){return this.token?this.token:a.get(b.JWT_TOKEN_KEY)},c.storeJwtToken=function(c,d){d&&a.set(b.JWT_TOKEN_KEY,c),this.token=c},c.storeConfiguration=function(c){a.set(b.APPLICATION_CONFIGURATION_KEY,c)},c.storeUserProfile=function(c){a.set(b.USER_PROFILE_KEY,c)},c.getConfiguration=function(){return a.get(b.APPLICATION_CONFIGURATION_KEY)},c.getUserProfile=function(){return a.get(b.USER_PROFILE_KEY)},c.clear=function(){a.remove(b.JWT_TOKEN_KEY),a.remove(b.USER_PROFILE_KEY)},c}]).factory("ApplicationUtil",[function(){var a={};return a.parseQueryCriteria=function(a){var b=[];return a.q&&b.push("q="+a.q),a.limit&&b.push("limit="+a.limit),a.page&&b.push("page="+a.page),a.order&&b.push("order="+a.order),a.orderBy&&b.push("orderBy="+a.orderBy),a.joinCondition&&b.push("joinCondition="+a.joinCondition),b.join("&")},a}]).factory("Logger",["$log","ENVIRONMENT",function(b,c){var d={};return d.error=function(d,e){e=e||"Error ",b.error("[ENVIRONMENT "+c+"] "+e+" [ "+a.toJson(d.data||d)+" ]")},d}]).service("ProfilesMock",["BASE_DEV_URL","$http","$q","RequestHelper","Logger",function(a,b,c,d,e){var f={};return f.getUserProfile=function(){return d.execute({url:a+"/getUserProfileProfiles.json"})},f.fetchAndSaveUserProfile=function(){this.getUserProfile().then(function(a){ApplicationStorage.storeUserProfile(a)})},f.updateDevice=function(b,c){return d.execute({url:a+"/updateDeviceProfiles.json"})},f.removeDevice=function(b){return d.execute({url:a+"/removeDeviceProfiles.json"})},f}]).service("ProfilesProduction",["BASE_URL","$http","$q","RequestHelper","Logger","ApplicationUtil","ApplicationStorage",function(a,b,c,d,e,f,g){var h={};return h.getUserProfile=function(){return d.execute({url:a+"/me"})},h.fetchAndSaveUserProfile=function(){this.getUserProfile().then(function(a){g.storeUserProfile(a)})},h.updateDevice=function(b,c){var e=g.getUserProfile();return d.execute({url:a+"users/"+e.id+"/updateDevice",method:"POST",data:{deviceId:b,deviceType:c}})},h.removeDevice=function(b){var c=g.getUserProfile();return d.execute({url:a+"users/"+c.id+"/removeDevice",method:"POST",data:{deviceId:b}})},h}]).factory("Profiles",["ServicesResolver","APP_CONSTANTS",function(a,b){return a.getService(b.SERVICES.Profiles)}]).service("AuthMock",["$q","$http","BASE_DEV_URL","Logger","ApplicationStorage","Profiles",function(a,b,c,d,e,f){var g={};return g.login=function(g){var h=a.defer();return b.get(c+"/loginAuth.json").then(function(a){e.storeJwtToken(a.data.token,g.rememberMe),f.fetchAndSaveUserProfile(),h.resolve(a.data)},function(a){d.error(a,"Error while authentication"),h.reject(a)}),h.promise},g.logout=function(){e.clear()},g.isAuthenticated=function(){var a=e.getJwtToken();return a?!0:!1},g}]).service("AuthProduction",["$http","Logger","$q","BASE_URL","ApplicationStorage","Profiles",function(a,b,c,d,e,f){var g={};return g.login=function(g){var h=c.defer(),i={url:d+"/users/login",method:"POST",data:{username:g.username,password:g.password}};return a(i).then(function(a){e.storeJwtToken(a.data.token,g.rememberMe),f.fetchAndSaveUserProfile(),h.resolve(a.data)},function(a){b.error(a,"Error while authentication"),h.reject(a)}),h.promise},g.logout=function(){e.clear()},g.isAuthenticated=function(){var a=e.getJwtToken();return a?!0:!1},g}]).factory("Auth",["ServicesResolver","APP_CONSTANTS",function(a,b){return a.getService(b.SERVICES.Auth)}]).service("ReceiptsMock",["BASE_DEV_URL","RequestHelper",function(a,b){var c={};return c.get=function(c){return b.execute({url:a+"/getReceipts.json"})},c.create=function(c){return b.execute({url:a+"/createReceipts.json",headers:{}})},c.getByOrganization=function(){return b.execute({url:a+"/getByOrganizationReceipts.json"})},c.me=function(){return b.execute({url:a+"/meReceipts.json"})},c}]).service("ReceiptsProduction",["BASE_URL","RequestHelper",function(a,b){var c={},d=a+"/receipts";return c.get=function(a){return b.execute({url:d+"/"+a})},c.create=function(a){return b.execute({method:"POST",url:d,data:a})},c.getByOrganization=function(){return b.execute({url:d})},c.me=function(){return b.execute({url:a+"/me/receipts"})},c}]).factory("Receipts",["ServicesResolver","APP_CONSTANTS",function(a,b){return a.getService(b.SERVICES.Receipts)}]).service("OrganizationsMock",["BASE_DEV_URL","RequestHelper",function(a,b){var c={};return c.get=function(c){return b.execute({url:a+"/getOrganizations.json"})},c.create=function(c){return b.execute({url:a+"/createOrganizations.json",headers:{}})},c.query=function(c){return b.execute({url:a+"/queryOrganizations.json"})},c.update=function(c,d){return b.execute({url:a+"/updateOrganizations.json"})},c}]).service("OrganizationsProduction",["BASE_URL","RequestHelper",function(a,b){var c={},d=a+"/organizations";return c.get=function(a){return b.execute({url:d+"/"+a})},c.create=function(a){return b.execute({method:"POST",url:d,data:a,headers:{}})},c.query=function(a){return b.execute({url:d+"?"+ApplicationUtil.parseQueryCriteria(a)})},c.update=function(a,c){return b.execute({method:"PUT",url:d+"/"+a,data:c})},c}]).factory("Organizations",["ServicesResolver","APP_CONSTANTS",function(a,b){return a.getService(b.SERVICES.Organizations)}]),a.module("billidpoc.auth-services",[]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).factory("AuthInterceptor",["$rootScope","$q","AUTH_EVENTS",function(a,b,c){return{responseError:function(d){return a.$broadcast({401:c.notAuthenticated,403:c.notAuthorized}[d.status],d),b.reject(d)}}}])}(angular);